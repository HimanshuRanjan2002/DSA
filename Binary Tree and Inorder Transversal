class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

# Function to insert nodes in a binary tree level-wise (for example)
from collections import deque

def insert_level_order(arr, root, i, n):
    # Base case for recursion
    if i < n:
        temp = Node(arr[i])
        root = temp

        # insert left child
        root.left = insert_level_order(arr, root.left, 2 * i + 1, n)

        # insert right child
        root.right = insert_level_order(arr, root.right, 2 * i + 2, n)

    return root

# Inorder traversal (Left, Root, Right)
def inorder(root):
    if root:
        inorder(root.left)
        print(root.data, end=" ")
        inorder(root.right)

# Example usage
if __name__ == "__main__":
    elements = [1, 2, 3, 4, 5, 6, 7]
    n = len(elements)
    root = insert_level_order(elements, None, 0, n)

    print("Inorder traversal of the binary tree:")
    inorder(root)
